
test_c:     file format elf32-i386

Disassembly of section .init:

08048270 <_init>:
 8048270:	55                   	push   %ebp
 8048271:	89 e5                	mov    %esp,%ebp
 8048273:	83 ec 08             	sub    $0x8,%esp
 8048276:	e8 89 00 00 00       	call   8048304 <call_gmon_start>
 804827b:	e8 10 01 00 00       	call   8048390 <frame_dummy>
 8048280:	e8 fb 01 00 00       	call   8048480 <__do_global_ctors_aux>
 8048285:	c9                   	leave  
 8048286:	c3                   	ret    
Disassembly of section .plt:

08048288 <__gmon_start__@plt-0x10>:
 8048288:	ff 35 c8 95 04 08    	pushl  0x80495c8
 804828e:	ff 25 cc 95 04 08    	jmp    *0x80495cc
 8048294:	00 00                	add    %al,(%eax)
	...

08048298 <__gmon_start__@plt>:
 8048298:	ff 25 d0 95 04 08    	jmp    *0x80495d0
 804829e:	68 00 00 00 00       	push   $0x0
 80482a3:	e9 e0 ff ff ff       	jmp    8048288 <_init+0x18>

080482a8 <__libc_start_main@plt>:
 80482a8:	ff 25 d4 95 04 08    	jmp    *0x80495d4
 80482ae:	68 08 00 00 00       	push   $0x8
 80482b3:	e9 d0 ff ff ff       	jmp    8048288 <_init+0x18>

080482b8 <printf@plt>:
 80482b8:	ff 25 d8 95 04 08    	jmp    *0x80495d8
 80482be:	68 10 00 00 00       	push   $0x10
 80482c3:	e9 c0 ff ff ff       	jmp    8048288 <_init+0x18>

080482c8 <puts@plt>:
 80482c8:	ff 25 dc 95 04 08    	jmp    *0x80495dc
 80482ce:	68 18 00 00 00       	push   $0x18
 80482d3:	e9 b0 ff ff ff       	jmp    8048288 <_init+0x18>
Disassembly of section .text:

080482e0 <_start>:
 80482e0:	31 ed                	xor    %ebp,%ebp
 80482e2:	5e                   	pop    %esi
 80482e3:	89 e1                	mov    %esp,%ecx
 80482e5:	83 e4 f0             	and    $0xfffffff0,%esp
 80482e8:	50                   	push   %eax
 80482e9:	54                   	push   %esp
 80482ea:	52                   	push   %edx
 80482eb:	68 00 84 04 08       	push   $0x8048400
 80482f0:	68 10 84 04 08       	push   $0x8048410
 80482f5:	51                   	push   %ecx
 80482f6:	56                   	push   %esi
 80482f7:	68 d4 83 04 08       	push   $0x80483d4
 80482fc:	e8 a7 ff ff ff       	call   80482a8 <__libc_start_main@plt>
 8048301:	f4                   	hlt    
 8048302:	90                   	nop    
 8048303:	90                   	nop    

08048304 <call_gmon_start>:
 8048304:	55                   	push   %ebp
 8048305:	89 e5                	mov    %esp,%ebp
 8048307:	53                   	push   %ebx
 8048308:	83 ec 04             	sub    $0x4,%esp
 804830b:	e8 00 00 00 00       	call   8048310 <call_gmon_start+0xc>
 8048310:	5b                   	pop    %ebx
 8048311:	81 c3 b4 12 00 00    	add    $0x12b4,%ebx
 8048317:	8b 93 fc ff ff ff    	mov    0xfffffffc(%ebx),%edx
 804831d:	85 d2                	test   %edx,%edx
 804831f:	74 05                	je     8048326 <call_gmon_start+0x22>
 8048321:	e8 72 ff ff ff       	call   8048298 <__gmon_start__@plt>
 8048326:	58                   	pop    %eax
 8048327:	5b                   	pop    %ebx
 8048328:	c9                   	leave  
 8048329:	c3                   	ret    
 804832a:	90                   	nop    
 804832b:	90                   	nop    
 804832c:	90                   	nop    
 804832d:	90                   	nop    
 804832e:	90                   	nop    
 804832f:	90                   	nop    

08048330 <__do_global_dtors_aux>:
 8048330:	55                   	push   %ebp
 8048331:	89 e5                	mov    %esp,%ebp
 8048333:	53                   	push   %ebx
 8048334:	83 ec 04             	sub    $0x4,%esp
 8048337:	80 3d e8 95 04 08 00 	cmpb   $0x0,0x80495e8
 804833e:	75 3f                	jne    804837f <__do_global_dtors_aux+0x4f>
 8048340:	b8 f0 94 04 08       	mov    $0x80494f0,%eax
 8048345:	2d ec 94 04 08       	sub    $0x80494ec,%eax
 804834a:	c1 f8 02             	sar    $0x2,%eax
 804834d:	8d 58 ff             	lea    0xffffffff(%eax),%ebx
 8048350:	a1 e4 95 04 08       	mov    0x80495e4,%eax
 8048355:	39 c3                	cmp    %eax,%ebx
 8048357:	76 1f                	jbe    8048378 <__do_global_dtors_aux+0x48>
 8048359:	8d b4 26 00 00 00 00 	lea    0x0(%esi),%esi
 8048360:	83 c0 01             	add    $0x1,%eax
 8048363:	a3 e4 95 04 08       	mov    %eax,0x80495e4
 8048368:	ff 14 85 ec 94 04 08 	call   *0x80494ec(,%eax,4)
 804836f:	a1 e4 95 04 08       	mov    0x80495e4,%eax
 8048374:	39 c3                	cmp    %eax,%ebx
 8048376:	77 e8                	ja     8048360 <__do_global_dtors_aux+0x30>
 8048378:	c6 05 e8 95 04 08 01 	movb   $0x1,0x80495e8
 804837f:	83 c4 04             	add    $0x4,%esp
 8048382:	5b                   	pop    %ebx
 8048383:	5d                   	pop    %ebp
 8048384:	c3                   	ret    
 8048385:	8d 74 26 00          	lea    0x0(%esi),%esi
 8048389:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

08048390 <frame_dummy>:
 8048390:	55                   	push   %ebp
 8048391:	89 e5                	mov    %esp,%ebp
 8048393:	83 ec 08             	sub    $0x8,%esp
 8048396:	a1 f4 94 04 08       	mov    0x80494f4,%eax
 804839b:	85 c0                	test   %eax,%eax
 804839d:	74 12                	je     80483b1 <frame_dummy+0x21>
 804839f:	b8 00 00 00 00       	mov    $0x0,%eax
 80483a4:	85 c0                	test   %eax,%eax
 80483a6:	74 09                	je     80483b1 <frame_dummy+0x21>
 80483a8:	c7 04 24 f4 94 04 08 	movl   $0x80494f4,(%esp)
 80483af:	ff d0                	call   *%eax
 80483b1:	c9                   	leave  
 80483b2:	c3                   	ret    
 80483b3:	90                   	nop    

080483b4 <func>:

int a;

int func(int a)
{
 80483b4:	55                   	push   %ebp
 80483b5:	89 e5                	mov    %esp,%ebp
 80483b7:	83 ec 08             	sub    $0x8,%esp
    printf("%d\n", a);
 80483ba:	8b 45 08             	mov    0x8(%ebp),%eax
 80483bd:	89 44 24 04          	mov    %eax,0x4(%esp)
 80483c1:	c7 04 24 d0 84 04 08 	movl   $0x80484d0,(%esp)
 80483c8:	e8 eb fe ff ff       	call   80482b8 <printf@plt>
    return 0;
 80483cd:	b8 00 00 00 00       	mov    $0x0,%eax
}
 80483d2:	c9                   	leave  
 80483d3:	c3                   	ret    

080483d4 <main>:

int main(int argc, char** argv)
{
 80483d4:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 80483d8:	83 e4 f0             	and    $0xfffffff0,%esp
 80483db:	ff 71 fc             	pushl  0xfffffffc(%ecx)
 80483de:	55                   	push   %ebp
 80483df:	89 e5                	mov    %esp,%ebp
 80483e1:	51                   	push   %ecx
 80483e2:	83 ec 04             	sub    $0x4,%esp
    printf("hello world\n");
 80483e5:	c7 04 24 d4 84 04 08 	movl   $0x80484d4,(%esp)
 80483ec:	e8 d7 fe ff ff       	call   80482c8 <puts@plt>
    return 0;
 80483f1:	b8 00 00 00 00       	mov    $0x0,%eax
}
 80483f6:	83 c4 04             	add    $0x4,%esp
 80483f9:	59                   	pop    %ecx
 80483fa:	5d                   	pop    %ebp
 80483fb:	8d 61 fc             	lea    0xfffffffc(%ecx),%esp
 80483fe:	c3                   	ret    
 80483ff:	90                   	nop    

08048400 <__libc_csu_fini>:
 8048400:	55                   	push   %ebp
 8048401:	89 e5                	mov    %esp,%ebp
 8048403:	5d                   	pop    %ebp
 8048404:	c3                   	ret    
 8048405:	8d 74 26 00          	lea    0x0(%esi),%esi
 8048409:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

08048410 <__libc_csu_init>:
 8048410:	55                   	push   %ebp
 8048411:	89 e5                	mov    %esp,%ebp
 8048413:	57                   	push   %edi
 8048414:	56                   	push   %esi
 8048415:	53                   	push   %ebx
 8048416:	e8 5e 00 00 00       	call   8048479 <__i686.get_pc_thunk.bx>
 804841b:	81 c3 a9 11 00 00    	add    $0x11a9,%ebx
 8048421:	83 ec 1c             	sub    $0x1c,%esp
 8048424:	e8 47 fe ff ff       	call   8048270 <_init>
 8048429:	8d 83 20 ff ff ff    	lea    0xffffff20(%ebx),%eax
 804842f:	89 45 f0             	mov    %eax,0xfffffff0(%ebp)
 8048432:	8d 83 20 ff ff ff    	lea    0xffffff20(%ebx),%eax
 8048438:	29 45 f0             	sub    %eax,0xfffffff0(%ebp)
 804843b:	c1 7d f0 02          	sarl   $0x2,0xfffffff0(%ebp)
 804843f:	8b 55 f0             	mov    0xfffffff0(%ebp),%edx
 8048442:	85 d2                	test   %edx,%edx
 8048444:	74 2b                	je     8048471 <__libc_csu_init+0x61>
 8048446:	31 ff                	xor    %edi,%edi
 8048448:	89 c6                	mov    %eax,%esi
 804844a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048450:	8b 45 10             	mov    0x10(%ebp),%eax
 8048453:	83 c7 01             	add    $0x1,%edi
 8048456:	89 44 24 08          	mov    %eax,0x8(%esp)
 804845a:	8b 45 0c             	mov    0xc(%ebp),%eax
 804845d:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048461:	8b 45 08             	mov    0x8(%ebp),%eax
 8048464:	89 04 24             	mov    %eax,(%esp)
 8048467:	ff 16                	call   *(%esi)
 8048469:	83 c6 04             	add    $0x4,%esi
 804846c:	39 7d f0             	cmp    %edi,0xfffffff0(%ebp)
 804846f:	75 df                	jne    8048450 <__libc_csu_init+0x40>
 8048471:	83 c4 1c             	add    $0x1c,%esp
 8048474:	5b                   	pop    %ebx
 8048475:	5e                   	pop    %esi
 8048476:	5f                   	pop    %edi
 8048477:	5d                   	pop    %ebp
 8048478:	c3                   	ret    

08048479 <__i686.get_pc_thunk.bx>:
 8048479:	8b 1c 24             	mov    (%esp),%ebx
 804847c:	c3                   	ret    
 804847d:	90                   	nop    
 804847e:	90                   	nop    
 804847f:	90                   	nop    

08048480 <__do_global_ctors_aux>:
 8048480:	55                   	push   %ebp
 8048481:	89 e5                	mov    %esp,%ebp
 8048483:	53                   	push   %ebx
 8048484:	bb e4 94 04 08       	mov    $0x80494e4,%ebx
 8048489:	83 ec 04             	sub    $0x4,%esp
 804848c:	a1 e4 94 04 08       	mov    0x80494e4,%eax
 8048491:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048494:	74 0c                	je     80484a2 <__do_global_ctors_aux+0x22>
 8048496:	83 eb 04             	sub    $0x4,%ebx
 8048499:	ff d0                	call   *%eax
 804849b:	8b 03                	mov    (%ebx),%eax
 804849d:	83 f8 ff             	cmp    $0xffffffff,%eax
 80484a0:	75 f4                	jne    8048496 <__do_global_ctors_aux+0x16>
 80484a2:	83 c4 04             	add    $0x4,%esp
 80484a5:	5b                   	pop    %ebx
 80484a6:	5d                   	pop    %ebp
 80484a7:	c3                   	ret    
Disassembly of section .fini:

080484a8 <_fini>:
 80484a8:	55                   	push   %ebp
 80484a9:	89 e5                	mov    %esp,%ebp
 80484ab:	53                   	push   %ebx
 80484ac:	83 ec 04             	sub    $0x4,%esp
 80484af:	e8 00 00 00 00       	call   80484b4 <_fini+0xc>
 80484b4:	5b                   	pop    %ebx
 80484b5:	81 c3 10 11 00 00    	add    $0x1110,%ebx
 80484bb:	e8 70 fe ff ff       	call   8048330 <__do_global_dtors_aux>
 80484c0:	59                   	pop    %ecx
 80484c1:	5b                   	pop    %ebx
 80484c2:	c9                   	leave  
 80484c3:	c3                   	ret    
